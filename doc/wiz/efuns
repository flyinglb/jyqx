
这里列出了MudOS_V21的efun的简短说明，接其分类进行描述，以便 
于同志们参考。因为接触这些东西的时间不长，有的是望文生义，错误 
在所难免，请各位前辈多多指教。 
====================================== 
Arrays 
====================================== 
allocate---分配数组空间 
arrayp---判断所给参数是否为数组 
filter_array---返回符合条件的子数组 
map_array---经函数程序修正元素数组 
member_array---返回数组或字符串中指定元素的事件索引 
pointerp---判断所给变量是否为一指针 
sort_array---将数组中的元素排序 
unique_array---将数组元素分割成组 
====================================== 
buffers 
====================================== 
allocate_buffer---分配缓冲区 
bufferp---判断所给参数是否为缓冲区指针 
crc32---计算缓冲区或字符串的冗余码 
read_buffer---读入文件到缓冲区或将缓冲区中的部分置入字符串变量 
write_buffer---将缓冲区内容写入文件，或将数据写入缓冲区 
====================================== 
calls 
====================================== 
call_other---调用对象的内部函数作用于该对象 
call_out---延缓对象的函数调用 
catch---捕捉表达式错误 
origin---判断当前函数如何被调用 
previous_object---返回调用当前函数的对象 
query_shadowing---判断给定对象是否为另一个对象的影射 
remove_call_out---去除函数调用的延缓 
shadow---在某些对象上影射一个或多个函数 
this_object---返回当前调用的对象的指针 
throw---强制使对象产生错误 
====================================== 
Compile 
====================================== 
generate_source---生成一个给定对象的对应的C代码 
====================================== 
ed 
====================================== 
ed_cmd---传送一条命令到编辑过程 
ed_start---开始编辑过程 
query_ed_mode---返回当前编辑过程的状态 
====================================== 
filesystem 
====================================== 
cp---拷贝文件 
file_size---取得文件大小 
get_dir---返回当前目录信息 
link---连接一个文件到另一个文件 
mkdir---生成一个子目录 
read_bytes---从文件中读取一定数量的连续字节到字符串变量 
read_file---读一文件到字符串变量 
rename---将文件改名 
rm---删除文件 
rmdir---删除子目录 
stat---返回文件或目录的信息 
tail---显示文件的最后几行 
write_bytes---将连续的一些字节写入文件 
write_file---将字符串填加在文件未尾 
====================================== 
floats 
====================================== 
acos---返回浮点数的反余弦值 
asin---返回浮点数的反正弦值 
atan---返回浮点数的反正切值 
ceil---返回浮点数最相近的整数值（大于或等到于） 
cos---返回浮点数的余弦值 
exp---返回浮点数的以ｅ为底的幂 
floatp---判断所给参数是否为一浮浮点数 
floor---返回浮点数最相近的整数值（小于或等到于） 
log---返回浮点数的自然对数 
pow---返回浮点数X的Y次幂 
sin---返回浮点数的正弦值 
sqrt---返回浮点数的平方根 
tan---返回浮点数的正切值 
to_int---将浮点数转为整数 
====================================== 
functions 
====================================== 
apply---赋值函数指针 
bind---改变函数指针的拥有者 
evaluate---赋值函数指针 
functionp---判断所给参数是否为一函数指针，及其类型 
====================================== 
general 
====================================== 
map---通过函数修正关系型数组、数组或字符串 
nullp---判断所给参数是否为空 
restore_variable---从字符串中恢复变量的值 
save_variable---将变量的值存入字符串 
sizeof---返回关系型数组、数组或字符串中元素的数量 
typeof---返回表达式的类型 
undefinedp---判断所给参数是否已被定义 
====================================== 
interactive 
====================================== 
add_action---将一个命令词与某一局部函数相关联 
command---使对象执行一个命令 
commands---返回用户可做的行为的说明 
disable_commands---不允许对象使用用户命令 
disable_wizard---取消一个对象的巫师权限 
ed---编辑文件 
enable_commands---允许对象使用用户命令 
exec---切换一个交谈式对象的连接至另一个对象 
find_player---通过名字查找一个对象 
get_char---使输入中的下一个字符传送给指定函数 
in_edit---判断一个用户是否正在编辑文件 
in_input---判断一个用户是否处于输入状态 
input_to---使输入中的下一行字符传送至指定函数 
interactive---判断对象是否处于交谈状态 
message---传送一条消息至一活动的对象 
notify_fail---返加一条错误信息 
printf---格式化输出 
query_host_name---返回主机名 
query_idle---判断一个对象发呆的时间长短 
query_ip_name---返回一对用户对象的IP名 
query_ip_number---返回一对用户对象的IP值 
query_snoop---返回一用户的调查者 
query_snooping---返回被调查的对象 
receive---将消息显示给当前对象 
remove_action---解除一个命令词与局部函数的关联 
resolve---分解Internet地址为域名 
say---将消息传送给同一环境内的所有对象 
set_this_player---设置this_player( )的返回值who 
shout---传送一条消息给所有活动对象 
snoop---调查一个用户 
this_interactive---返回对象的描述 
this_player---返回当前用户 
userp---判断当前用户是否为交互的 
users---返回所有交互用户的数组 
write---传送一和消息给当前用户 
====================================== 
internals 
====================================== 
cache_stats---返回驱动程序和MUDLIB的状态 
debug_info---显示调试信息 
debugmalloc---将内容的信息写入文件 
dump_file_descriptors---清除MudOS的文件处理描述表 
dump_prog---清除或反编译对象的LPC代码 
dump_socket_status---返回LPC接口的信息 
dumpallobj---统计所有被调用对象的信息 
get_config---查询配置信息 
malloc_status---统计相关内存的使用情况 
memory_info---获得某个或所有的对象的内存使用情况 
moncontrol---在执行期间打开或关闭描述 
mud_status---报告驱动程序和库的状态 
opcprof---统计不同efun的使用情况 
query_load_average---强迫一个错误发生在某个对象上 
refs---送引用数量到一个数据结构 
rusage---返回系统调用getrusage()获得的信息 
set_debug_level---调协debug( )所使用的调试级别 
set_malloc_mask---设置调试信息的显示控制 
swap---交换文件说明 
time_expression---得到一个表达式所用的实际时间 
trace---设置跟踪标志，并返回原有的标志 
traceprefix---设置欲跟踪的对象标志 
====================================== 
mappings 
====================================== 
allocate_mapping---为关系型数组预分配空间 
each---循环访问关系型数组中的（关键词：值）对 
filter_mapping---基于某一函数去除关系型数组中的某些元素 
keys---得到关系型数中的关键词组成的数组 
map_delete---由关键词指定，删除关系型数组中的一对值 
map_mapping---通过函数修改关系型数组中的元素 
mapp---判断所给参数是否为一关系型数组 
match_path---由一路径收索关系型数组 
unique_mapping---基于函数由一数组生成一关系型数组 
values---得到关系型数中的值组成的数组 
====================================== 
mudlib 
====================================== 
author_stats---从制作者处收集到的信息 
domain_stats---从域收集到的信息 
enable_wizard---给予对象巫师权限 
export_uid---设置另一对象的用户标志 
find_living---查找匹配所给标志的对象 
geteuid---返回对象或函数的有效用户标志 
getuid---返回对象的用户标志 
living---判断所给对象是否为活的 
livings---返回由所有活的对象所组成的数组 
query_privs---返回一个对象的私有字符串 
set_author---将对象与其制作者相关联 
set_light---设置用户的轻量级别 
set_living_name---为活的对象设置一个名字 
set_privs---设置一对象的私有字符串 
seteuid---调置有效的用户标志 
wizardp---判断对象是否为一巫师 
====================================== 
numbers 
====================================== 
intp---判断所给参数是否为整数 
random---返回一随机数 
to_float---将整数转为浮点数 
====================================== 
objects 
====================================== 
all_inventory---返回对象的详细清单 
children---返回由一给定对象克隆得到的对象的数组 
clone_object---调用一对象的拷贝 
clonep---判断所给参数是否指向一个克隆对象 
deep_inventory---返回对象的嵌套清单 
destruct---从游戏中清除一个对象 
environment---返回对象的环境元素 
file_name---得到一对个的文件名 
find_object---利用文件名查找对象 
first_inventory---返回对象清单的第一个元素 
load_object---利用文件名查找或调用对象 
master---返回主对象 
move_object---将当前对象移至另一环境 
new---调入一对象的拷贝 
next_inventory---返回同一清单的下一个元素 
objectp---判断所给变量是否为一对象 
objects---返回所有载入对象的数组 
present---利用标志查找对象 
query_heart_beat---查询对象的心跳状态 
reload_object---将一对象重新调入 
restore_object---将一对象重新调入 
save_object---将对象的变量的值存入文件 
set_heart_beat---允许或禁止对象的心跳 
set_hide---设置一个可隐藏的对象的隐藏状态 
tell_object---送一消息给对象 
tell_room---送一消息给房间内的对象 
virtualp---判断所给变量是否指向一虚拟对象 
====================================== 
parsing 
====================================== 
parse_command---根据所给模版去匹配字符串 
process_string---给出一个含替换字符的字符串 
process_value---给出一个函数调用的结果 
query_verb---查询当前运行的函数的名字 
====================================== 
sockets 
====================================== 
socket_accept---接受接口的连接 
socket_acquire---设定接口的拥有者 
socket_address---为efun接口返回远端地址 
socket_bind---将一名字与接口关联 
socket_close---关闭接口 
socket_connect---初始接口连接 
socket_create---建立一efun接口 
socket_error---返回接口的错误信息 
socket_listen---监听接口连接 
socket_release---释放接口的所有权给另一对象 
socket_write---从接口送一消息 
====================================== 
strings 
====================================== 
break_string---按规定长度分割字符串 
capitalize---将字符串中的字符转为大写字符 
clear_bit---北朝鲜节置零 
crypt---加密字符串 
explode---拆散字符串 
implode---连接字符串 
lower_case---将字符串中的字符转为小写字符 
reg_assoc---按一定的匹配字符进行抽取 
regexp---正规表达式处理 
replace_string---替换字符串中的字符 
set_bit---设置字节型字符串的位值 
sprintf---格式化输出 
sscanf---在字符串中匹配提取子字符串 
strcmp---比较两字符串 
stringp---判断所给变量是否为字符串 
strlen---取得字符串的长度 
strsrch---在字符串中收索子串 
test_bit---测验字节字符串中的位 
====================================== 
system 
====================================== 
all_previous_objects---返回调用当前函数的对象 
call_out_info---返回待定的call_out()信息 
ctime---返回一表达时间的字符串 
deep_inherit_list---取得一对象的继承列表 
error---产生一run---time错误 
errorp---判断所给变量是否为错误代码 
eval_cost---返回一表达式剩余值 
find_call_out---返回调用表中的下一个调用 
function_exists---查找包含对象的函数的文件 
function_profile---为一对象取得函数描述信息 
inherit_list---取得对象的父级对象列表 
inherits---判断对象是否继承于给定文件 
localtime---转为局部时间 
max_eval_cost---返回最大值 
reclaim_objects---回收发呆对象 
replace_program---替换当前对象的程序 
reset_eval_cost---重设最大值的剩余值 
set_eval_limit---设置表达式最大值 
set_reset---当对象重置后修改时间值 
shutdown---关闭驱动程序 
time---返回距1970年1月1日的秒数 
uptime---驱动程序运行的秒数 
